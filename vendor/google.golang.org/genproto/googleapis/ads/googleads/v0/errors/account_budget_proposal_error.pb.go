// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v0/errors/account_budget_proposal_error.proto

package errors // import "google.golang.org/genproto/googleapis/ads/googleads/v0/errors"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Enum describing possible account budget proposal errors.
type AccountBudgetProposalErrorEnum_AccountBudgetProposalError int32

const (
	// Enum unspecified.
	AccountBudgetProposalErrorEnum_UNSPECIFIED AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 0
	// The received error code is not known in this version.
	AccountBudgetProposalErrorEnum_UNKNOWN AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 1
	// The field mask must be empty for create/end/remove proposals.
	AccountBudgetProposalErrorEnum_FIELD_MASK_NOT_ALLOWED AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 2
	// The field cannot be set because of the proposal type.
	AccountBudgetProposalErrorEnum_IMMUTABLE_FIELD AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 3
	// The field is required because of the proposal type.
	AccountBudgetProposalErrorEnum_REQUIRED_FIELD_MISSING AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 4
	// Proposals that have been approved cannot be cancelled.
	AccountBudgetProposalErrorEnum_CANNOT_CANCEL_APPROVED_PROPOSAL AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 5
	// Budgets that haven't been approved cannot be removed.
	AccountBudgetProposalErrorEnum_CANNOT_REMOVE_UNAPPROVED_BUDGET AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 6
	// Budgets that are currently running cannot be removed.
	AccountBudgetProposalErrorEnum_CANNOT_REMOVE_RUNNING_BUDGET AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 7
	// Budgets that haven't been approved cannot be truncated.
	AccountBudgetProposalErrorEnum_CANNOT_END_UNAPPROVED_BUDGET AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 8
	// Only budgets that are currently running can be truncated.
	AccountBudgetProposalErrorEnum_CANNOT_END_INACTIVE_BUDGET AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 9
	// All budgets must have names.
	AccountBudgetProposalErrorEnum_BUDGET_NAME_REQUIRED AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 10
	// Expired budgets cannot be edited after a sufficient amount of time has
	// passed.
	AccountBudgetProposalErrorEnum_CANNOT_UPDATE_OLD_BUDGET AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 11
	// It is not permissible a propose a new budget that ends in the past.
	AccountBudgetProposalErrorEnum_CANNOT_END_IN_PAST AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 12
	// An expired budget cannot be extended to overlap with the running budget.
	AccountBudgetProposalErrorEnum_CANNOT_EXTEND_END_TIME AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 13
	// A purchase order number is required.
	AccountBudgetProposalErrorEnum_PURCHASE_ORDER_NUMBER_REQUIRED AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 14
	// Budgets that have a pending update cannot be updated.
	AccountBudgetProposalErrorEnum_PENDING_UPDATE_PROPOSAL_EXISTS AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 15
	// Cannot propose more than one budget when the corresponding billing setup
	// hasn't been approved.
	AccountBudgetProposalErrorEnum_MULTIPLE_BUDGETS_NOT_ALLOWED_FOR_UNAPPROVED_BILLING_SETUP AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 16
	// Cannot update the start time of a budget that has already started.
	AccountBudgetProposalErrorEnum_CANNOT_UPDATE_START_TIME_FOR_STARTED_BUDGET AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 17
	// Cannot update the spending limit of a budget with an amount lower than
	// what has already been spent.
	AccountBudgetProposalErrorEnum_SPENDING_LIMIT_LOWER_THAN_ACCRUED_COST_NOT_ALLOWED AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 18
	// Cannot propose a budget update without actually changing any fields.
	AccountBudgetProposalErrorEnum_UPDATE_IS_NO_OP AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 19
	// The end time must come after the start time.
	AccountBudgetProposalErrorEnum_END_TIME_MUST_FOLLOW_START_TIME AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 20
	// The budget's date range must fall within the date range of its billing
	// setup.
	AccountBudgetProposalErrorEnum_BUDGET_DATE_RANGE_INCOMPATIBLE_WITH_BILLING_SETUP AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 21
	// The user is not authorized to mutate budgets for the given billing setup.
	AccountBudgetProposalErrorEnum_NOT_AUTHORIZED AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 22
	// Mutates are not allowed for the given billing setup.
	AccountBudgetProposalErrorEnum_INVALID_BILLING_SETUP AccountBudgetProposalErrorEnum_AccountBudgetProposalError = 23
)

var AccountBudgetProposalErrorEnum_AccountBudgetProposalError_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "UNKNOWN",
	2:  "FIELD_MASK_NOT_ALLOWED",
	3:  "IMMUTABLE_FIELD",
	4:  "REQUIRED_FIELD_MISSING",
	5:  "CANNOT_CANCEL_APPROVED_PROPOSAL",
	6:  "CANNOT_REMOVE_UNAPPROVED_BUDGET",
	7:  "CANNOT_REMOVE_RUNNING_BUDGET",
	8:  "CANNOT_END_UNAPPROVED_BUDGET",
	9:  "CANNOT_END_INACTIVE_BUDGET",
	10: "BUDGET_NAME_REQUIRED",
	11: "CANNOT_UPDATE_OLD_BUDGET",
	12: "CANNOT_END_IN_PAST",
	13: "CANNOT_EXTEND_END_TIME",
	14: "PURCHASE_ORDER_NUMBER_REQUIRED",
	15: "PENDING_UPDATE_PROPOSAL_EXISTS",
	16: "MULTIPLE_BUDGETS_NOT_ALLOWED_FOR_UNAPPROVED_BILLING_SETUP",
	17: "CANNOT_UPDATE_START_TIME_FOR_STARTED_BUDGET",
	18: "SPENDING_LIMIT_LOWER_THAN_ACCRUED_COST_NOT_ALLOWED",
	19: "UPDATE_IS_NO_OP",
	20: "END_TIME_MUST_FOLLOW_START_TIME",
	21: "BUDGET_DATE_RANGE_INCOMPATIBLE_WITH_BILLING_SETUP",
	22: "NOT_AUTHORIZED",
	23: "INVALID_BILLING_SETUP",
}
var AccountBudgetProposalErrorEnum_AccountBudgetProposalError_value = map[string]int32{
	"UNSPECIFIED":                     0,
	"UNKNOWN":                         1,
	"FIELD_MASK_NOT_ALLOWED":          2,
	"IMMUTABLE_FIELD":                 3,
	"REQUIRED_FIELD_MISSING":          4,
	"CANNOT_CANCEL_APPROVED_PROPOSAL": 5,
	"CANNOT_REMOVE_UNAPPROVED_BUDGET": 6,
	"CANNOT_REMOVE_RUNNING_BUDGET":    7,
	"CANNOT_END_UNAPPROVED_BUDGET":    8,
	"CANNOT_END_INACTIVE_BUDGET":      9,
	"BUDGET_NAME_REQUIRED":            10,
	"CANNOT_UPDATE_OLD_BUDGET":        11,
	"CANNOT_END_IN_PAST":              12,
	"CANNOT_EXTEND_END_TIME":          13,
	"PURCHASE_ORDER_NUMBER_REQUIRED":  14,
	"PENDING_UPDATE_PROPOSAL_EXISTS":  15,
	"MULTIPLE_BUDGETS_NOT_ALLOWED_FOR_UNAPPROVED_BILLING_SETUP": 16,
	"CANNOT_UPDATE_START_TIME_FOR_STARTED_BUDGET":               17,
	"SPENDING_LIMIT_LOWER_THAN_ACCRUED_COST_NOT_ALLOWED":        18,
	"UPDATE_IS_NO_OP":                                   19,
	"END_TIME_MUST_FOLLOW_START_TIME":                   20,
	"BUDGET_DATE_RANGE_INCOMPATIBLE_WITH_BILLING_SETUP": 21,
	"NOT_AUTHORIZED":                                    22,
	"INVALID_BILLING_SETUP":                             23,
}

func (x AccountBudgetProposalErrorEnum_AccountBudgetProposalError) String() string {
	return proto.EnumName(AccountBudgetProposalErrorEnum_AccountBudgetProposalError_name, int32(x))
}
func (AccountBudgetProposalErrorEnum_AccountBudgetProposalError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_account_budget_proposal_error_c86ef659348a5c67, []int{0, 0}
}

// Container for enum describing possible account budget proposal errors.
type AccountBudgetProposalErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountBudgetProposalErrorEnum) Reset()         { *m = AccountBudgetProposalErrorEnum{} }
func (m *AccountBudgetProposalErrorEnum) String() string { return proto.CompactTextString(m) }
func (*AccountBudgetProposalErrorEnum) ProtoMessage()    {}
func (*AccountBudgetProposalErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_budget_proposal_error_c86ef659348a5c67, []int{0}
}
func (m *AccountBudgetProposalErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBudgetProposalErrorEnum.Unmarshal(m, b)
}
func (m *AccountBudgetProposalErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBudgetProposalErrorEnum.Marshal(b, m, deterministic)
}
func (dst *AccountBudgetProposalErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBudgetProposalErrorEnum.Merge(dst, src)
}
func (m *AccountBudgetProposalErrorEnum) XXX_Size() int {
	return xxx_messageInfo_AccountBudgetProposalErrorEnum.Size(m)
}
func (m *AccountBudgetProposalErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBudgetProposalErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBudgetProposalErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AccountBudgetProposalErrorEnum)(nil), "google.ads.googleads.v0.errors.AccountBudgetProposalErrorEnum")
	proto.RegisterEnum("google.ads.googleads.v0.errors.AccountBudgetProposalErrorEnum_AccountBudgetProposalError", AccountBudgetProposalErrorEnum_AccountBudgetProposalError_name, AccountBudgetProposalErrorEnum_AccountBudgetProposalError_value)
}

func init() {
	proto.RegisterFile("google/ads/googleads/v0/errors/account_budget_proposal_error.proto", fileDescriptor_account_budget_proposal_error_c86ef659348a5c67)
}

var fileDescriptor_account_budget_proposal_error_c86ef659348a5c67 = []byte{
	// 648 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x5d, 0x6f, 0xd3, 0x3c,
	0x14, 0x7e, 0xb7, 0xbd, 0x6f, 0xf7, 0xe2, 0xc1, 0x66, 0xbc, 0x0f, 0xc6, 0x34, 0x75, 0xa8, 0x5c,
	0x22, 0xa5, 0x05, 0x04, 0x12, 0x42, 0x5c, 0xb8, 0xc9, 0x69, 0x6b, 0x2d, 0xb1, 0x8d, 0x3f, 0xba,
	0x69, 0xaa, 0x64, 0x75, 0x6b, 0x55, 0x21, 0x6d, 0x4d, 0xd5, 0x6c, 0xfb, 0x41, 0x5c, 0x72, 0xc7,
	0xdf, 0xe0, 0x1a, 0xfe, 0x0f, 0x72, 0xd2, 0x74, 0xed, 0xc4, 0xb8, 0x88, 0x72, 0x92, 0xf3, 0x3c,
	0xcf, 0xf9, 0xf0, 0x39, 0x46, 0xcd, 0x51, 0x9a, 0x8e, 0x2e, 0x87, 0xf5, 0xfe, 0x20, 0xab, 0x17,
	0xa6, 0xb7, 0x6e, 0x1b, 0xf5, 0xe1, 0x74, 0x9a, 0x4e, 0xb3, 0x7a, 0xff, 0xe2, 0x22, 0xbd, 0x19,
	0x5f, 0xbb, 0xf3, 0x9b, 0xc1, 0x68, 0x78, 0xed, 0x26, 0xd3, 0x74, 0x92, 0x66, 0xfd, 0x4b, 0x97,
	0xbb, 0x83, 0xc9, 0x34, 0xbd, 0x4e, 0x49, 0xb5, 0x20, 0x06, 0xfd, 0x41, 0x16, 0xcc, 0x35, 0x82,
	0xdb, 0x46, 0x50, 0x68, 0xd4, 0x7e, 0x56, 0x50, 0x95, 0x16, 0x3a, 0xcd, 0x5c, 0x46, 0xce, 0x54,
	0xc0, 0xfb, 0x61, 0x7c, 0x73, 0x55, 0xfb, 0x5e, 0x41, 0x07, 0x0f, 0x43, 0xc8, 0x16, 0xda, 0xb0,
	0x5c, 0x4b, 0x08, 0x59, 0x8b, 0x41, 0x84, 0xff, 0x21, 0x1b, 0x68, 0xdd, 0xf2, 0x63, 0x2e, 0x4e,
	0x38, 0x5e, 0x21, 0x07, 0x68, 0xaf, 0xc5, 0x20, 0x8e, 0x5c, 0x42, 0xf5, 0xb1, 0xe3, 0xc2, 0x38,
	0x1a, 0xc7, 0xe2, 0x04, 0x22, 0xbc, 0x4a, 0xb6, 0xd1, 0x16, 0x4b, 0x12, 0x6b, 0x68, 0x33, 0x06,
	0x97, 0xa3, 0xf0, 0x9a, 0x27, 0x28, 0xf8, 0x6c, 0x99, 0x82, 0xc8, 0xcd, 0x98, 0x4c, 0x6b, 0xc6,
	0xdb, 0xf8, 0x5f, 0xf2, 0x12, 0x1d, 0x85, 0x94, 0x7b, 0x91, 0x90, 0xf2, 0x10, 0x62, 0x47, 0xa5,
	0x54, 0xa2, 0x0b, 0x91, 0x93, 0x4a, 0x48, 0xa1, 0x69, 0x8c, 0xff, 0x5b, 0x00, 0x29, 0x48, 0x44,
	0x17, 0x9c, 0xe5, 0x73, 0x58, 0xd3, 0x46, 0x6d, 0x30, 0xb8, 0x42, 0x5e, 0xa0, 0xc3, 0x65, 0x90,
	0xb2, 0x9c, 0x33, 0xde, 0x2e, 0x11, 0xeb, 0x0b, 0x08, 0xe0, 0xd1, 0x1f, 0x34, 0xfe, 0x27, 0x55,
	0x74, 0xb0, 0x80, 0x60, 0x9c, 0x86, 0x86, 0x75, 0xa1, 0xf4, 0x3f, 0x22, 0xfb, 0x68, 0xa7, 0xb0,
	0x1d, 0xa7, 0x09, 0xb8, 0xb2, 0x2a, 0x8c, 0xc8, 0x21, 0xda, 0x9f, 0x31, 0xad, 0x8c, 0xa8, 0x01,
	0x27, 0xe2, 0xb9, 0xee, 0x06, 0xd9, 0x43, 0x64, 0x49, 0xd7, 0x49, 0xaa, 0x0d, 0x7e, 0xec, 0x3b,
	0x53, 0xfe, 0x3f, 0x35, 0xde, 0xe5, 0x1f, 0xc3, 0x12, 0xc0, 0x4f, 0x48, 0x0d, 0x55, 0xa5, 0x55,
	0x61, 0x87, 0x6a, 0x70, 0x42, 0x45, 0xa0, 0x1c, 0xb7, 0x49, 0x13, 0xd4, 0x5d, 0xd4, 0xcd, 0x1c,
	0x03, 0x3c, 0xf2, 0x55, 0xce, 0xc2, 0x96, 0x5d, 0x73, 0x70, 0xca, 0xb4, 0xd1, 0x78, 0x8b, 0x7c,
	0x42, 0x1f, 0x12, 0x1b, 0x1b, 0x26, 0xe3, 0xb2, 0x10, 0xbd, 0x78, 0x68, 0xae, 0x25, 0xd4, 0x52,
	0x2f, 0x58, 0x1c, 0x7b, 0x3d, 0x0d, 0xc6, 0x4a, 0x8c, 0x49, 0x1d, 0xbd, 0x5a, 0x2e, 0x4c, 0x1b,
	0xaa, 0x4c, 0x9e, 0x64, 0x4e, 0xcd, 0x3f, 0xef, 0x7a, 0xf8, 0x94, 0xbc, 0x47, 0x6f, 0x74, 0x99,
	0x54, 0xcc, 0x12, 0x66, 0x9c, 0x8f, 0xa3, 0x9c, 0xe9, 0x50, 0xee, 0x68, 0x18, 0x2a, 0x0b, 0x91,
	0x0b, 0x85, 0x36, 0x4b, 0xa3, 0x43, 0xfc, 0xe8, 0xcc, 0x22, 0x30, 0x9f, 0xa0, 0x13, 0x12, 0x6f,
	0xfb, 0x93, 0x2f, 0x5b, 0xe2, 0x12, 0xab, 0x8d, 0x6b, 0x09, 0x4f, 0x58, 0x48, 0x02, 0xef, 0x90,
	0x77, 0xe8, 0xf5, 0xec, 0x54, 0x72, 0xba, 0xa2, 0xbc, 0x0d, 0x8e, 0xf1, 0x50, 0x24, 0x92, 0x1a,
	0xe6, 0x27, 0xf1, 0x84, 0x99, 0xce, 0xbd, 0xca, 0x76, 0x09, 0x41, 0x9b, 0x79, 0x06, 0xd6, 0x74,
	0x84, 0x62, 0x67, 0x10, 0xe1, 0x3d, 0xf2, 0x1c, 0xed, 0x32, 0xde, 0xa5, 0x31, 0xbb, 0xdf, 0x88,
	0x67, 0xcd, 0x5f, 0x2b, 0xa8, 0x76, 0x91, 0x5e, 0x05, 0x7f, 0xdf, 0xbe, 0xe6, 0xd1, 0xc3, 0x7b,
	0x25, 0xfd, 0xfa, 0xca, 0x95, 0xb3, 0x68, 0x26, 0x31, 0x4a, 0x2f, 0xfb, 0xe3, 0x51, 0x90, 0x4e,
	0x47, 0xf5, 0xd1, 0x70, 0x9c, 0x2f, 0x77, 0x79, 0x29, 0x4c, 0xbe, 0x64, 0x0f, 0xdd, 0x11, 0x1f,
	0x8b, 0xd7, 0xd7, 0xd5, 0xb5, 0x36, 0xa5, 0xdf, 0x56, 0xab, 0xed, 0x42, 0x8c, 0x0e, 0xb2, 0xa0,
	0x30, 0xbd, 0xd5, 0x6d, 0x04, 0x79, 0xc8, 0xec, 0x47, 0x09, 0xe8, 0xd1, 0x41, 0xd6, 0x9b, 0x03,
	0x7a, 0xdd, 0x46, 0xaf, 0x00, 0x9c, 0x57, 0xf2, 0xc0, 0x6f, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x48, 0xff, 0xc4, 0xda, 0x9b, 0x04, 0x00, 0x00,
}
