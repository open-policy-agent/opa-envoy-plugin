// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v0/services/carrier_constant_service.proto

package services // import "google.golang.org/genproto/googleapis/ads/googleads/v0/services"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import resources "google.golang.org/genproto/googleapis/ads/googleads/v0/resources"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for [CarrierConstantService.GetCarrierConstant][google.ads.googleads.v0.services.CarrierConstantService.GetCarrierConstant].
type GetCarrierConstantRequest struct {
	// Resource name of the carrier constant to fetch.
	ResourceName         string   `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCarrierConstantRequest) Reset()         { *m = GetCarrierConstantRequest{} }
func (m *GetCarrierConstantRequest) String() string { return proto.CompactTextString(m) }
func (*GetCarrierConstantRequest) ProtoMessage()    {}
func (*GetCarrierConstantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_carrier_constant_service_6ffed320151f7dbf, []int{0}
}
func (m *GetCarrierConstantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCarrierConstantRequest.Unmarshal(m, b)
}
func (m *GetCarrierConstantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCarrierConstantRequest.Marshal(b, m, deterministic)
}
func (dst *GetCarrierConstantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCarrierConstantRequest.Merge(dst, src)
}
func (m *GetCarrierConstantRequest) XXX_Size() int {
	return xxx_messageInfo_GetCarrierConstantRequest.Size(m)
}
func (m *GetCarrierConstantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCarrierConstantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCarrierConstantRequest proto.InternalMessageInfo

func (m *GetCarrierConstantRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetCarrierConstantRequest)(nil), "google.ads.googleads.v0.services.GetCarrierConstantRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CarrierConstantServiceClient is the client API for CarrierConstantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarrierConstantServiceClient interface {
	// Returns the requested carrier constant in full detail.
	GetCarrierConstant(ctx context.Context, in *GetCarrierConstantRequest, opts ...grpc.CallOption) (*resources.CarrierConstant, error)
}

type carrierConstantServiceClient struct {
	cc *grpc.ClientConn
}

func NewCarrierConstantServiceClient(cc *grpc.ClientConn) CarrierConstantServiceClient {
	return &carrierConstantServiceClient{cc}
}

func (c *carrierConstantServiceClient) GetCarrierConstant(ctx context.Context, in *GetCarrierConstantRequest, opts ...grpc.CallOption) (*resources.CarrierConstant, error) {
	out := new(resources.CarrierConstant)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v0.services.CarrierConstantService/GetCarrierConstant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarrierConstantServiceServer is the server API for CarrierConstantService service.
type CarrierConstantServiceServer interface {
	// Returns the requested carrier constant in full detail.
	GetCarrierConstant(context.Context, *GetCarrierConstantRequest) (*resources.CarrierConstant, error)
}

func RegisterCarrierConstantServiceServer(s *grpc.Server, srv CarrierConstantServiceServer) {
	s.RegisterService(&_CarrierConstantService_serviceDesc, srv)
}

func _CarrierConstantService_GetCarrierConstant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCarrierConstantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarrierConstantServiceServer).GetCarrierConstant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v0.services.CarrierConstantService/GetCarrierConstant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarrierConstantServiceServer).GetCarrierConstant(ctx, req.(*GetCarrierConstantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CarrierConstantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v0.services.CarrierConstantService",
	HandlerType: (*CarrierConstantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCarrierConstant",
			Handler:    _CarrierConstantService_GetCarrierConstant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v0/services/carrier_constant_service.proto",
}

func init() {
	proto.RegisterFile("google/ads/googleads/v0/services/carrier_constant_service.proto", fileDescriptor_carrier_constant_service_6ffed320151f7dbf)
}

var fileDescriptor_carrier_constant_service_6ffed320151f7dbf = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4f, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x4f, 0x4c, 0x29, 0xd6, 0x87, 0x30, 0x41, 0xac, 0x32, 0x03, 0xfd, 0xe2, 0xd4,
	0xa2, 0xb2, 0xcc, 0xe4, 0xd4, 0x62, 0xfd, 0xe4, 0xc4, 0xa2, 0xa2, 0xcc, 0xd4, 0xa2, 0xf8, 0xe4,
	0xfc, 0xbc, 0xe2, 0x92, 0xc4, 0xbc, 0x92, 0x78, 0xa8, 0x8c, 0x5e, 0x41, 0x51, 0x7e, 0x49, 0xbe,
	0x90, 0x02, 0x44, 0x97, 0x5e, 0x62, 0x4a, 0xb1, 0x1e, 0xdc, 0x00, 0xbd, 0x32, 0x03, 0x3d, 0x98,
	0x01, 0x52, 0x16, 0xb8, 0xac, 0x28, 0x4a, 0x2d, 0xce, 0x2f, 0x2d, 0xc2, 0x66, 0x07, 0xc4, 0x6c,
	0x29, 0x19, 0x98, 0xce, 0x82, 0x4c, 0xfd, 0xc4, 0xbc, 0xbc, 0xfc, 0x92, 0xc4, 0x92, 0xcc, 0xfc,
	0xbc, 0x62, 0x88, 0xac, 0x92, 0x03, 0x97, 0xa4, 0x7b, 0x6a, 0x89, 0x33, 0x44, 0xab, 0x33, 0x54,
	0x67, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x32, 0x17, 0x2f, 0xcc, 0xf8, 0xf8, 0xbc,
	0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x1e, 0x98, 0xa0, 0x5f, 0x62, 0x6e,
	0xaa, 0xd1, 0x05, 0x46, 0x2e, 0x31, 0x34, 0xfd, 0xc1, 0x10, 0x57, 0x0b, 0x6d, 0x65, 0xe4, 0x12,
	0xc2, 0x34, 0x5d, 0xc8, 0x5a, 0x8f, 0x90, 0x77, 0xf5, 0x70, 0xba, 0x49, 0xca, 0x08, 0xa7, 0x66,
	0x78, 0x48, 0xe8, 0xa1, 0x69, 0x55, 0xd2, 0x6b, 0xba, 0xfc, 0x64, 0x32, 0x93, 0x86, 0x90, 0x1a,
	0x28, 0xc0, 0xaa, 0x51, 0xbc, 0x64, 0x9b, 0x8c, 0xaa, 0xb6, 0x58, 0x5f, 0xab, 0xd6, 0xe9, 0x36,
	0x23, 0x97, 0x4a, 0x72, 0x7e, 0x2e, 0x41, 0x67, 0x3a, 0x49, 0x63, 0xf7, 0x78, 0x00, 0x28, 0x68,
	0x03, 0x18, 0xa3, 0x3c, 0xa0, 0x06, 0xa4, 0xe7, 0xe7, 0x24, 0xe6, 0xa5, 0xeb, 0xe5, 0x17, 0xa5,
	0xeb, 0xa7, 0xa7, 0xe6, 0x81, 0x03, 0x1e, 0x16, 0x89, 0x05, 0x99, 0xc5, 0xb8, 0x93, 0x8d, 0x35,
	0x8c, 0xb1, 0x88, 0x89, 0xd9, 0xdd, 0xd1, 0x71, 0x15, 0x93, 0x82, 0x3b, 0xc4, 0x40, 0xc7, 0x94,
	0x62, 0x3d, 0x08, 0x13, 0xc4, 0x0a, 0x33, 0xd0, 0x83, 0x5a, 0x5c, 0x7c, 0x0a, 0xa6, 0x24, 0xc6,
	0x31, 0xa5, 0x38, 0x06, 0xae, 0x24, 0x26, 0xcc, 0x20, 0x06, 0xa6, 0x24, 0x89, 0x0d, 0xec, 0x00,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x47, 0xb5, 0xfd, 0xa7, 0xb6, 0x02, 0x00, 0x00,
}
